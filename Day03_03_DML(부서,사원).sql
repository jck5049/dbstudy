/*
    DML
    1. Data Manipulation Language
    2. 데이터 조작어
    3. 데이터(행, Row)를 삽입, 수정, 삭제할 때 사용하는 언어이다.
    4. DML 사용 후에는 COMMIT(저장) 또는 ROLLBACK(취소) 처리를 해야 한다.
    5. 종류
        1) 삽입 : INSERT INTO VALUES
        2) 수정 : UPDATE SET WHERE
        3) 삭제 : DELETE FROM WHERE
*/

-- 참고. DML을 INSERT, UPDATE, DELETE + SELECT로 보는 경우도 있다.

-- 테이블 삭제
DROP TABLE EMPLOYEE_TBL;
DROP TABLE DEPARTMENT_TBL;

-- 부서(DEPARTMENT) 테이블 생성
CREATE TABLE DEPARTMENT_TBL (
    DEPT_NO     NUMBER              NOT NULL,
    DEPT_NAME   VARCHAR2(15 BYTE)   NOT NULL,
    LOCATION    VARCHAR2(15 BYTE)   NOT NULL
);

-- 사원(EMPLOYEE) 테이블 생성
CREATE TABLE EMPLOYEE_TBL (
    EMP_NO      NUMBER              NOT NULL,
    NAME        VARCHAR2(20 BYTE)   NOT NULL,
    DEPART      NUMBER,
    POSITION    VARCHAR2(20 BYTE),
    GENDER      CHAR(2 BYTE),
    HIRE_DATE   DATE,
    SALARY      NUMBER
);

-- 기본키
ALTER TABLE DEPARTMENT_TBL
    ADD CONSTRAINT PK_DEPARTMENT PRIMARY KEY(DEPT_NO);
ALTER TABLE EMPLOYEE_TBL
    ADD CONSTRAINT PK_EMPLOYEE PRIMARY KEY(EMP_NO);

-- 외래키
ALTER TABLE EMPLOYEE_TBL
    ADD CONSTRAINT FK_EMPLOYEE_DEPART FOREIGN KEY(DEPART)
    REFERENCES DEPARTMENT_TBL(DEPT_NO)
        ON DELETE SET NULL;

-- 시퀀스(번호 생성기) 만들기
CREATE SEQUENCE DEPARTMENT_SEQ; -- 이름은 아무거나 입력해도 상관없다! 변수같은 느낌.

-- 시퀀스에서 번호 뽑는 함수 : NEXTVAL


-- 데이터 입력하기(Parent key를 먼저 입력해야 한다.)

-- 방법 1. INSERT INTO DEPARTMENT_TBL VALUES(1, '영업부', '대구');
-- 방법 2. INSERT INTO DEPARTMENT_TBL(DEPT_NAME, LOCATION) VALUES('총무부', '대구');

-- 방법 3.
INSERT INTO DEPARTMENT_TBL(DEPT_NO, DEPT_NAME, LOCATION) VALUES(DEPARTMENT_SEQ.NEXTVAL, '영업부', '대구');
INSERT INTO DEPARTMENT_TBL(DEPT_NO, DEPT_NAME, LOCATION) VALUES(DEPARTMENT_SEQ.NEXTVAL, '인사부', '서울');
INSERT INTO DEPARTMENT_TBL(DEPT_NO, DEPT_NAME, LOCATION) VALUES(DEPARTMENT_SEQ.NEXTVAL, '총무부', '대구');
INSERT INTO DEPARTMENT_TBL(DEPT_NO, DEPT_NAME, LOCATION) VALUES(DEPARTMENT_SEQ.NEXTVAL, '기획부', '서울');
COMMIT;
