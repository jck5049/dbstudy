-- 테이블 구조 파악 (DESCRIBE 코드) 사원들 목록을 대충 미리 확인가능.
DESC EMPLOYEES;     -- 4글자 지워도 사용가능 그래서 DESC만 사용함.

-- 1. EMPLOYEES 테이블에서 FIRST_NAME, LAST_NAME 조회하기
SELECT FIRST_NAME, LAST_NAME
  FROM EMPLOYEES;
  
-- 2. EMPLOYEES 테이블에서 DEPARTMENT_ID를 중복 제거하고 조회하기
-- DISTINCT -> 같은 옵션의 중복된 코드를 1개 코드로 제거해서 보여주는 코드이다.
SELECT DISTINCT DEPARTMENT_ID
  FROM EMPLOYEES;
  
-- 3. EMPLOYEES 테이블에서 EMPLOYEE_ID가 150인 사원 조회하기
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME
  FROM EMPLOYEES
 WHERE EMPLOYEE_ID = 150;   -- WHERE절(조건)의 등호(=)는 비교 연산자이다.

-- 4. EMPLOYEES 테이블에서 SALARY가 10000 ~ 20000 사이인 사원 조회하기
SELECT FIRST_NAME, LAST_NAME, SALARY
  FROM EMPLOYEES
 WHERE SALARY BETWEEN 10000 AND 20000;

-- 5. EMPLOYEES 테이블에서 DEPARTMENT_ID가 30, 40, 50인 사원 조회하기
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, DEPARTMENT_ID
  FROM EMPLOYEES
 WHERE DEPARTMENT_ID IN (30,40,50);

-- 6. EMPLOYEES 테이블에서 DEPARTMENT_ID가 NULL인 사원 조회하기
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, DEPARTMENT_ID
  FROM EMPLOYEES
 WHERE DEPARTMENT_ID IS NULL;  -- IS NOT NULL

-- 7. EMPLOYEES 테이블에서 PHONE_NUMBER가 '515'로 시작하는 사원 조회하기
-- % << 와일드 카드가 작성 되었을때 LIKE를 사용하여 코드 작성하기( %는 %뒤에 나머지 모든 텍스트가 같이 조회된다.)
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, PHONE_NUMBER
  FROM EMPLOYEES
 WHERE PHONE_NUMBER LIKE '515%';    -- PHONE_NUMBER NOT LIKE '515%'

-- 8. EMPLOYEES 테이블을 FIRST_NAME의 가나다순(오름차순: ASCENDING SORT)으로 정렬해서 조회하기 (ASC만 작성가능)
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME
  FROM EMPLOYEES
 ORDER BY FIRST_NAME ASC;   -- ASC는 생략 가능하다.

-- 9. EMPLOYEES 테이블에서 높은 SALARY(내림차순: DESCENDING SORT)를 받는 사원순으로 조회하기 (DESC만 작성가능)
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, SALARY
  FROM EMPLOYEES
 ORDER BY SALARY DESC;  -- DESC는 생략이 불가능하다.

-- 10. EMPLOYEES 테이블의 사원들을 DEPARTMENT_ID순으로 조회하고, 동일한 DEPARTMENT_ID를 가진 사원들은 높은 SALARY순으로 조회하기
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, DEPARTMENT_ID, SALARY
  FROM EMPLOYEES
ORDER BY DEPARTMENT_ID ASC, SALARY DESC;

